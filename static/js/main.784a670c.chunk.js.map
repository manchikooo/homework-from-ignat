{"version":3,"sources":["p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h5/pages/PreJunior.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h6/stylesForHW6.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/RoutesTo.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","SelectTitle","props","useState","collapsed","setCollapsed","className","classes","navigation","tabIndex","navHeader","menuTitle","onClick","title","SelectBody","navLinks","to","Header","Error404","Message","messageBlock","avatar","src","avatarIcon","messageInfoAndCorner","id","messageInfoBlock","messageInfo","companionName","name","message","messageTime","time","companions","map","c","HW1","Affair","affairsInfoBlock","affairsNames","affair","affairsPriority","priority","buttonsStyle","deleteButtom","redButton","deleteAffairCallback","_id","Affairs","mappedAffairs","data","a","key","allActive","filter","activeButton","default","highActive","middleActive","lowActive","affairsBlock","filterButtons","setFilter","defaultAffairs","HW2","affairs","setAffairs","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","restProps","spanClassName","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","value","SuperButton","red","finalClassName","Greeting","setNameCallback","addUser","totalUsers","inputClass","inputStyle","errorMessage","GreetingContainer","users","addUserCallback","setName","setError","length","trimmedName","trim","replace","alert","HW3","setUsers","console","log","newUser","v1","u","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","testSpanError","blue","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","style","pointerForEditableSpan","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","x","y","defaultState","getItem","parse","restoreState","HW6","setValue","undefined","valueFromLS","slice","PreJunior","preJuniorBlock","PATH","RoutesTo","path","element","Junior","JuniorPlus","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.784a670c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__-BXUG\",\"btn\":\"SuperButton_btn__3MgTu\",\"redButton\":\"SuperButton_redButton__HLSWF\",\"activeButton\":\"SuperButton_activeButton__2iiAO\",\"deleteButtom\":\"SuperButton_deleteButtom__3dpPF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageBlock\":\"Message_messageBlock__3mqFX\",\"avatar\":\"Message_avatar__3FT3j\",\"messageInfoBlock_1\":\"Message_messageInfoBlock_1__33e9x\",\"messageInfoBlock_2\":\"Message_messageInfoBlock_2__1RlvP\",\"messageInfoBlock_3\":\"Message_messageInfoBlock_3__gi52f\",\"messageInfo\":\"Message_messageInfo__COQv8\",\"companionName\":\"Message_companionName__1-GwX\",\"messageTime\":\"Message_messageTime__3SP_X\",\"avatarIcon\":\"Message_avatarIcon__33Wvt\",\"corner_1\":\"Message_corner_1__11dUK\",\"corner_2\":\"Message_corner_2__2e-JM\",\"corner_3\":\"Message_corner_3__wpJKo\",\"messageInfoAndCorner\":\"Message_messageInfoAndCorner__2YOCX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__l4fwN\",\"affairsBlock\":\"Affairs_affairsBlock__3kAKp\",\"affairsInfoBlock\":\"Affairs_affairsInfoBlock__AqbAz\",\"affairsNames\":\"Affairs_affairsNames__3h-8b\",\"affairsPriority\":\"Affairs_affairsPriority__3skVa\",\"affairsPriority_low\":\"Affairs_affairsPriority_low__1HUQH\",\"affairsPriority_middle\":\"Affairs_affairsPriority_middle__1r8gb\",\"affairsPriority_high\":\"Affairs_affairsPriority_high__2gcXM\",\"filterButtons\":\"Affairs_filterButtons__3ZOtB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLinks\":\"Header_navLinks__1PS7L\",\"navigation\":\"Header_navigation__2AwZh\",\"navHeader\":\"Header_navHeader__2nerj\",\"menuTitle\":\"Header_menuTitle__qvozi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorInput\":\"SuperInputText_errorInput__3ei0N\",\"superInput\":\"SuperInputText_superInput__3XH9u\",\"error\":\"SuperInputText_error__2J82S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preJuniorBlock\":\"PreJunior_preJuniorBlock__199gL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"HW4_column__2ZS4I\",\"testSpanError\":\"HW4_testSpanError___Mj8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"spanClassName\":\"SuperCheckbox_spanClassName__1K9ch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__uGflL\",\"error\":\"Greeting_error__1uvQ8\",\"errorMessage\":\"Greeting_errorMessage__zEoF5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pointerForEditableSpan\":\"stylesForHW6_pointerForEditableSpan__3d2DY\"};","import React, {useState} from 'react'\nimport {NavLink} from \"react-router-dom\";\nimport classes from './Header.module.css'\n\ntype HeaderPropsType = {}\n\nfunction Header(props: HeaderPropsType) {\n\n    return (\n        <div className='selectBlock'>\n            <SelectTitle title={'Меню'}/>\n        </div>\n    )\n}\n\n\ntype SelectTitleType = {\n    title: string\n}\n\nfunction SelectTitle(props: SelectTitleType) {\n\n    const [collapsed, setCollapsed] = useState(true)\n\n    return (<div className={classes.navigation}\n            // onBlur={() => setCollapsed(true)}\n                 tabIndex={0}>\n            <div className={classes.navHeader}>\n                <h3 className={classes.menuTitle}\n                    onClick={() => setCollapsed(!collapsed)}\n                >{props.title}</h3>\n                <div >\n                    {!collapsed && <SelectBody/>}\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nfunction SelectBody() {\n    return (\n        <div className={classes.navLinks}>\n            <span><NavLink to={'/pre-junior'}>pre-junior</NavLink></span>\n            <span><NavLink to={'/junior'}>junior</NavLink></span>\n            <span><NavLink to={'/junior-plus'}>junior-plus</NavLink></span>\n            {/*{props.items.map((i, index) =>*/}\n            {/*    <li onClick={() => props.setSelectValue(i.title)}*/}\n            {/*        key={index}>{i.title}</li>)}*/}\n        </div>)\n}\n\n// return (\n//     <div className={classes.navLinks}>\n//         <span><NavLink to={'/pre-junior'}>pre-junior</NavLink></span>\n//         <span><NavLink to={'/junior'}>junior</NavLink></span>\n//         <span><NavLink to={'/junior-plus'}>junior-plus</NavLink></span>\n//     </div>\n// )\n\n\nexport default Header\n","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\nimport classes from './Message.module.css'\nimport {MessageDataType, messageData} from \"./HW1\";\n\nexport function Message(props: MessageDataType) {\n\n    // if (messageData.companions[0].id === 1) {\n    //     return ClassName\n    // } else if (messageData.companions[1].id === 2) {\n    //     return ClassName\n    // } else if (messageData.companions[2].id === 3) {\n    //     return ClassName\n    // }\n\n    return (\n        <div className={classes.messageBlock}>\n            <div className={classes.avatar}>\n                <img src={props.avatar} className={classes.avatarIcon}/>\n            </div>\n            <div className={classes.messageInfoAndCorner}>\n                <div className={`${classes[`corner_${props.id}`]}`}/>\n                <div className={`${classes.messageInfoBlock} ${classes[`messageInfoBlock_${props.id}`]} ${`corner_${props.id}`}`}>\n                    <div className={classes.messageInfo}>\n                        <div className={classes.companionName}>{props.name}</div>\n                        <div>{props.message}</div>\n                    </div>\n                    <div className={classes.messageTime}>\n                        <div className={classes.messageTime}>{props.time}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nexport type MessageDataType = {\n    id?: number\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nexport const messageData = {\n    companions: [\n        {\n            id: 1,\n            avatar: 'https://avatars.mds.yandex.net/get-zen_doc/2816669/pub_5ec384fdd2576a75855f6578_5ec6222a5bdd272313d6e24c/scale_1200',\n            name: 'Sakura Haruno',\n            message: 'Если мы умрем, то лучше умереть сражаясь, чем ничего не делая!',\n            time: '21:59',\n        },\n        {\n            id: 2,\n            avatar: 'https://64.media.tumblr.com/f239b93f4852cf1a7abfbc8595083334/d25cd16f2cf37eeb-20/s500x750/9c2c56a2740ae4774dc7e6430fe5f44ec554db52.jpg',\n            name: 'Hinata Hyuga',\n            message: 'Ты не идеален, но, делая ошибки, ты учишься на них. Мне кажется, настоящая сила заключается именно в этом.',\n            time: '22:03',\n        },\n        {\n            id: 3,\n            avatar: 'https://i.mycdn.me/i?r=AzEPZsRbOZEKgBhR0XGMT1RkPb7cRrNQuuDVsZ1ApWcCk6aKTM5SRkZCeTgDn6uOyic&fn=sqr_288',\n            name: 'Tsunade Senju',\n            message: 'Деньги нужно срочно пропить, так как потом их просто не будет...',\n            time: '22:05',\n        },\n    ]\n}\n\nlet companions = messageData.companions.map(c => <Message id={c.id}\n                                                          avatar={c.avatar}\n                                                          name={c.name}\n                                                          message={c.message}\n                                                          time={c.time}/>)\n//\n// if (messageData.companions[0].id === 1) {\n//     return 'messageInfoBlockSakura'\n// }\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            {companions}\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport classes from './Affairs.module.css'\nimport buttonsStyle from './../h4/common/c2-SuperButton/SuperButton.module.css'\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType// need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    }// need to fix\n\n    return (\n        <div className={classes.affairsInfoBlock}>\n            <div className={classes.affairsNames}>\n                {props.affair.name}\n            </div>\n            <div className={`${classes.affairsPriority} ${classes[`affairsPriority_${props.affair.priority}`]}`}>\n                {props.affair.priority}\n            </div>\n            <div>\n                <button className={`${buttonsStyle.deleteButtom} ${buttonsStyle.redButton}`} onClick={deleteCallback}>x</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport classes from './Affairs.module.css'\nimport buttonsStyle from './../h4/common/c2-SuperButton/SuperButton.module.css'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n    filter: FilterType\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    } // need to fix\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n\n    const allActive = props.filter === 'all' ? buttonsStyle.activeButton : buttonsStyle.default\n    const highActive = props.filter === 'high' ? buttonsStyle.activeButton : buttonsStyle.default\n    const middleActive = props.filter === 'middle' ? buttonsStyle.activeButton : buttonsStyle.default\n    const lowActive = props.filter === 'low' ? buttonsStyle.activeButton : buttonsStyle.default\n\n    return (\n        <div className={classes.affairsBlock}>\n            {mappedAffairs}\n            <div className={classes.filterButtons}>\n                <button className={allActive} onClick={setAll}>all</button>\n                <button className={highActive} onClick={setHigh}>high</button>\n                <button className={middleActive} onClick={setMiddle}>middle</button>\n                <button className={lowActive} onClick={setLow}>low</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'low' | 'middle' | 'high'                // need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [                                       // need to fix any\n    {_id: 1, name: 'react', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'high') return affairs.filter(a => a.priority === 'high')  // need to fix\n    else if (filter === 'middle') return affairs.filter(a => a.priority === 'middle')  // need to fix\n    else if (filter === 'low') return affairs.filter(a => a.priority === 'low')\n    else return affairs                                  // need to fix\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    let afterDeletingTasks = affairs.filter(a => a._id !== _id)\n    return afterDeletingTasks// need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n                filter={filter}\n            />\n\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = error ? s.error : ''\n    const finalInputClassName = error ? s.errorInput : s.superInput // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <div className={finalSpanClassName}>{error}</div>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором хранится название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.redButton : s.default} ${className}`\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport inputStyle from './../h4/common/c1-SuperInputText/SuperInputText.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n    // onPressKey: (e) => void\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers, } // деструктуризация пропсов\n) => {\n    const inputClass = error ? inputStyle.errorInput : inputStyle.superInput // need to fix with (?:)\n\n    return (\n        <div>\n            <SuperInputText className={inputClass}\n                            value={name}\n                            onChange={setNameCallback}/>\n            {/*<input className={inputClass}*/}\n            {/*       value={name}*/}\n            {/*       onChange={setNameCallback}*/}\n            {/*/>*/}\n            <SuperButton onClick={addUser}\n                    // onKeyPress={onPressKey}\n            >add\n            </SuperButton>\n            <span>{totalUsers}</span>\n            <div className={s.errorMessage}>{error}</div>\n            <div>{name}</div>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback,}) => {          // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        const trimmedName = e.currentTarget.value.trim()// need to fix\n        if (trimmedName) {\n            setError('')\n        } else {\n            setError('Неверно введено')\n        }\n        setName(e.currentTarget.value)\n    }\n    const addUser = () => {\n        if (name.trim() !== '') {\n            addUserCallback(name.replace(/ +(?= )/g, ''))\n            alert(`Hello ${name.replace(/ +(?= )/g, '')}!`)\n        } else {\n            setError('Неверный ввод')\n        }\n        // need to fix\n        setName('')\n    }\n\n    // const onKeyPress = (e: number) => {\n    //     // if (e.)\n    // }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            // onKeyPress={onKeyPress}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nexport function HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([])// need to fix any\n    console.log(users)\n\n    const addUserCallback = (name: string) => {                   // need to fix any\n        const newUser = {                                       // need to fix\n            _id: v1(),\n            name,\n        }\n        setUsers([...users, newUser])\n    }\n\n    return (\n        <div>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users}\n                               addUserCallback={addUserCallback}\n            />\n\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            {users.map(u => <div key={u._id}>{u.name}</div>)}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'Неверный ввод'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text)// если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked}\n                               onChange={testOnChange}/>\n            </div>\n\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\nimport style from '../../stylesForHW6.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        setEditMode(false) // выключить editMode при нажатии Enter\n\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true) // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    // const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={style.pointerForEditableSpan}\n                        title='Edit me!'\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n\n                        ✎ ️{children || restProps.value}\n\n                        (наведи на span, подожди секунду)\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        const valueFromLS = localStorage.getItem('editable-span-value')\n        if (valueFromLS) {\n            setValue(valueFromLS.slice(1, -1))\n        }\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'enter text...'}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport classes from './PreJunior.module.css'\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div className={classes.preJuniorBlock}>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport classes from './PreJunior.module.css'\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div className={classes.preJuniorBlock}>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW6/>\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport classes from './PreJunior.module.css'\n\nfunction PreJunior() {\n    return (\n        <div className={classes.preJuniorBlock}>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport Error404 from \"./pages/Error404\";\nimport {Routes, Route, Navigate} from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport HW1 from \"../h1/HW1\";\nimport HW2 from \"../h2/HW2\";\nimport HW3 from \"../h3/HW3\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior-plus',\n    // add paths\n}\n\nfunction RoutesTo() {\n    return (\n        <div>\n            <Routes>\n                    {/*Routes выбирает первый подходящий роут*/}\n                    {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                    {/*exact нужен, чтобы указать полное совпадение (что после '/' ничего не будет)*/}\n                    <Route path={'/'} element={<Navigate to={PATH.PRE_JUNIOR}/>}/>\n\n                    <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\n                    <Route path={PATH.JUNIOR} element={<Junior/>}/>\n                    <Route path={PATH.JUNIOR_PLUS} element={<JuniorPlus/>}/>\n                    // add routes\n\n                    {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                    <Route path={'/*'} element={<Error404/>}/>\n            </Routes>\n        </div>\n    )\n}\n\nexport default RoutesTo\n","import React from 'react'\nimport Header from './Header'\nimport {HashRouter} from \"react-router-dom\";\nimport RoutesTo from \"./RoutesTo\";\nimport classes from \"./Header.module.css\";\n\nfunction HW5() {\n    return (\n        <div>\n            <HashRouter>\n                <div className={classes.navigation}>\n                <Header/>\n                </div>\n                <RoutesTo/>\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*HW1 сделано*/}\n            {/*<HW1/>*/}\n            {/*HW2 сделано*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}